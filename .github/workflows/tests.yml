name: Tests

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  phpunit:
    name: PHP ${{ matrix.php }} â€¢ deps=${{ matrix.dependencies }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ["8.1", "8.2", "8.3", "8.4"]
        dependencies: ["stable", "lowest"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, mbstring, iconv
          tools: composer:v2
          coverage: none

      - name: Validate composer.json
        run: composer validate --no-check-lock

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.dependencies }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.dependencies }}-composer-

      - name: Install dependencies (stable)
        if: matrix.dependencies == 'stable'
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Install dependencies (prefer-lowest)
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-lowest --prefer-stable --no-interaction --no-progress

      - name: Run PHPUnit
        run: vendor/bin/phpunit --no-coverage

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: intl, mbstring, iconv
          tools: composer:v2
          coverage: xdebug

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Run PHPUnit with coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
